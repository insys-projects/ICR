//****************** File Icr00A4.h ***********************
//
//  Определения констант и структур 
//	для работы с конфигурационным ППЗУ
//  для субмодулей FM212x4GDA 
//
//*********************************************************

#ifndef _ICR00A3_H
 #define _ICR00A3_H

#pragma pack(push, 1)    

#define ADM_CFG_TAG 0x00A3

// Конфигурационные параметры субмодуля
typedef struct _ICR_Cfg00A3 {
	U16	wTag;		// тэг структуры (ADM_CFG_TAG)
	U16	wSize;		// размер всех следующих полей структуры
	U08	bAdmIfNum;	// номер интерфейса ADM
	U08	bAdcCnt;	// количество АЦП: 0, 2
	U08	bDacCnt;	// количество ЦАП: 0, 4

	U08	bInputType;		// тип входа (на входе АЦП): 0-трансформатор, 1-усилитель
	U08	bOutputType;	// тип выхода (на выходе ЦАП): 0-трансформатор, 1-усилитель
	U08	bLpfBand;		// частота среза ФНЧ ЦАП: 0-нет, 1-630МГц, 
					//     2-400МГц, 3-225МГц, 4-120МГц, 5-80МГц, 6-1 ГГц
	U16	res1;		// резерв
	U32	nGenRef;    // частота внутр. генератора (Гц)
	U32	nAdcLoBand;	// нижняя частота полосы АЦП (Гц)
	U32	nAdcHiBand;	// верхняя частота полосы АЦП (Гц)
	U32	nDacLoBand;	// нижняя частота полосы ЦАП (Гц)
	U32	nDacHiBand;	// верхняя частота полосы ЦАП (Гц)

	U08	bAdcType;		// тип кристалла АЦП: 0-нет, 1-LM15851
	U08	bDacType;		// тип кристалла ЦАП: 0-нет, 1-AD9144, 2-AD9136/35
	U08	bPllType;		// тип кристалла PLL: 0-нет, 1-ADF4355
	U08	res2;			// резерв
	U32	nAdcBitrateMin;	// минимальный битрейт кристалла АЦП (мегабит/сек)
	U32	nAdcBitrateMax;	// максимальный битрейт кристалла АЦП (мегабит/сек)
	U32	nDacBitrateMin;	// минимальный битрейт кристалла ЦАП (мегабит/сек)
	U32	nDacBitrateMax;	// максимальный битрейт кристалла ЦАП (мегабит/сек)
	U16	wThdacRangeSysref;	// шкала преобразования ЦАП-ИПН (мВ)
	U16	wThdacRangeStart;	// шкала преобразования ЦАП-ИПН (мВ)
	U16	res3;			// резерв
	U16	res4;			// резерв
	U08 bFmcExtSlot;	// 1 - установлен FMC слот расширения
	U08	bTempAdr;		// адресный код измерителя температуры: 0x4D по умолчанию

} ICR_Cfg00A3, *PICR_Cfg00A3, ICR_CfgAdm, *PICR_CfgAdm;

#pragma pack(pop)    

#endif // _ICR00A3_H

// ****************** End of file Icr00A3.h **********************
